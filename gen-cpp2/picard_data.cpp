/**
 * Autogenerated by Thrift for picard.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#include "picard_data.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache {
namespace thrift {

const std::array<::cpp2::ColumnType, 5> TEnumDataStorage<::cpp2::ColumnType>::values = {{
  type::BOOLEAN,
  type::TEXT,
  type::NUMBER,
  type::TIME,
  type::OTHERS,
}};
const std::array<folly::StringPiece, 5> TEnumDataStorage<::cpp2::ColumnType>::names = {{
  "BOOLEAN",
  "TEXT",
  "NUMBER",
  "TIME",
  "OTHERS",
}};

const std::array<::cpp2::Mode, 4> TEnumDataStorage<::cpp2::Mode>::values = {{
  type::LEXING,
  type::PARSING_WITHOUT_GUARDS,
  type::PARSING_WITH_GUARDS,
  type::PARSING_WITH_GUARDS_AND_TYPE_CHECKING,
}};
const std::array<folly::StringPiece, 4> TEnumDataStorage<::cpp2::Mode>::names = {{
  "LEXING",
  "PARSING_WITHOUT_GUARDS",
  "PARSING_WITH_GUARDS",
  "PARSING_WITH_GUARDS_AND_TYPE_CHECKING",
}};

const std::array<::cpp2::FeedFatalException::Type, 3> TEnumDataStorage<::cpp2::FeedFatalException::Type>::values = {{
  type::tokenizerNotRegisteredException,
  type::tokenizerPrefixException,
  type::modeException,
}};
const std::array<folly::StringPiece, 3> TEnumDataStorage<::cpp2::FeedFatalException::Type>::names = {{
  "tokenizerNotRegisteredException",
  "tokenizerPrefixException",
  "modeException",
}};

const std::array<::cpp2::FeedResult::Type, 4> TEnumDataStorage<::cpp2::FeedResult::Type>::values = {{
  type::feedParseFailure,
  type::feedTimeoutFailure,
  type::feedPartialSuccess,
  type::feedCompleteSuccess,
}};
const std::array<folly::StringPiece, 4> TEnumDataStorage<::cpp2::FeedResult::Type>::names = {{
  "feedParseFailure",
  "feedTimeoutFailure",
  "feedPartialSuccess",
  "feedCompleteSuccess",
}};

const std::array<folly::StringPiece, 7> TStructDataStorage<::cpp2::SQLSchema>::fields_names = {{
  "columnNames",
  "columnTypes",
  "tableNames",
  "columnToTable",
  "tableToColumns",
  "foreignKeys",
  "primaryKeys",
}};
const std::array<int16_t, 7> TStructDataStorage<::cpp2::SQLSchema>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
}};
const std::array<protocol::TType, 7> TStructDataStorage<::cpp2::SQLSchema>::fields_types = {{
  TType::T_MAP,
  TType::T_MAP,
  TType::T_MAP,
  TType::T_MAP,
  TType::T_MAP,
  TType::T_MAP,
  TType::T_LIST,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::cpp2::RegisterSQLSchemaException>::fields_names = {{
  "dbId",
  "message",
}};
const std::array<int16_t, 2> TStructDataStorage<::cpp2::RegisterSQLSchemaException>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::cpp2::RegisterSQLSchemaException>::fields_types = {{
  TType::T_STRING,
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::cpp2::RegisterTokenizerException>::fields_names = {{
  "message",
}};
const std::array<int16_t, 1> TStructDataStorage<::cpp2::RegisterTokenizerException>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::RegisterTokenizerException>::fields_types = {{
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::cpp2::TokenizerNotRegisteredException>::fields_names = {{
  "message",
}};
const std::array<int16_t, 1> TStructDataStorage<::cpp2::TokenizerNotRegisteredException>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::TokenizerNotRegisteredException>::fields_types = {{
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::cpp2::TokenizerPrefixException>::fields_names = {{
  "message",
}};
const std::array<int16_t, 1> TStructDataStorage<::cpp2::TokenizerPrefixException>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::TokenizerPrefixException>::fields_types = {{
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::cpp2::ModeException>::fields_names = {{
  "message",
}};
const std::array<int16_t, 1> TStructDataStorage<::cpp2::ModeException>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::ModeException>::fields_types = {{
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 3> TStructDataStorage<::cpp2::FeedFatalException>::fields_names = {{
  "tokenizerNotRegisteredException",
  "tokenizerPrefixException",
  "modeException",
}};
const std::array<int16_t, 3> TStructDataStorage<::cpp2::FeedFatalException>::fields_ids = {{
  1,
  2,
  3,
}};
const std::array<protocol::TType, 3> TStructDataStorage<::cpp2::FeedFatalException>::fields_types = {{
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::cpp2::FeedException>::fields_names = {{
  "feedFatalException",
}};
const std::array<int16_t, 1> TStructDataStorage<::cpp2::FeedException>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::FeedException>::fields_types = {{
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 3> TStructDataStorage<::cpp2::FeedParseFailure>::fields_names = {{
  "input",
  "contexts",
  "description",
}};
const std::array<int16_t, 3> TStructDataStorage<::cpp2::FeedParseFailure>::fields_ids = {{
  1,
  2,
  3,
}};
const std::array<protocol::TType, 3> TStructDataStorage<::cpp2::FeedParseFailure>::fields_types = {{
  TType::T_STRING,
  TType::T_LIST,
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::cpp2::FeedTimeoutFailure>::fields_names = {{
  "message",
}};
const std::array<int16_t, 1> TStructDataStorage<::cpp2::FeedTimeoutFailure>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::FeedTimeoutFailure>::fields_types = {{
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 0> TStructDataStorage<::cpp2::FeedPartialSuccess>::fields_names = {{
}};
const std::array<int16_t, 0> TStructDataStorage<::cpp2::FeedPartialSuccess>::fields_ids = {{
}};
const std::array<protocol::TType, 0> TStructDataStorage<::cpp2::FeedPartialSuccess>::fields_types = {{
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::cpp2::FeedCompleteSuccess>::fields_names = {{
  "leftover",
}};
const std::array<int16_t, 1> TStructDataStorage<::cpp2::FeedCompleteSuccess>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::cpp2::FeedCompleteSuccess>::fields_types = {{
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::cpp2::FeedResult>::fields_names = {{
  "feedParseFailure",
  "feedTimeoutFailure",
  "feedPartialSuccess",
  "feedCompleteSuccess",
}};
const std::array<int16_t, 4> TStructDataStorage<::cpp2::FeedResult>::fields_ids = {{
  1,
  2,
  3,
  4,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::cpp2::FeedResult>::fields_types = {{
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

const std::array<folly::StringPiece, 3> TStructDataStorage<::cpp2::BatchFeedResult>::fields_names = {{
  "batchId",
  "topToken",
  "feedResult",
}};
const std::array<int16_t, 3> TStructDataStorage<::cpp2::BatchFeedResult>::fields_ids = {{
  1,
  2,
  3,
}};
const std::array<protocol::TType, 3> TStructDataStorage<::cpp2::BatchFeedResult>::fields_types = {{
  TType::T_I64,
  TType::T_I64,
  TType::T_STRUCT,
}};

} // namespace thrift
} // namespace apache
