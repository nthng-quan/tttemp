#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#


import folly.iobuf as _fbthrift_iobuf

from thrift.py3.reflection cimport (
    NumberType as __NumberType,
    StructType as __StructType,
    Qualifier as __Qualifier,
)


cimport picard.types as _picard_types

from thrift.py3.types cimport (
    constant_shared_ptr,
    default_inst,
)


cdef __StructSpec get_reflection__SQLSchema():
    cdef _picard_types.SQLSchema defaults = _picard_types.SQLSchema.create(
        constant_shared_ptr[_picard_types.cSQLSchema](
            default_inst[_picard_types.cSQLSchema]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="SQLSchema",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="columnNames",
            type=_picard_types.Map__string_string,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=2,
            name="columnTypes",
            type=_picard_types.Map__string_ColumnType,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=3,
            name="tableNames",
            type=_picard_types.Map__string_string,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=4,
            name="columnToTable",
            type=_picard_types.Map__string_string,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=5,
            name="tableToColumns",
            type=_picard_types.Map__string_List__string,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=6,
            name="foreignKeys",
            type=_picard_types.Map__string_string,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=7,
            name="primaryKeys",
            type=_picard_types.List__string,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__RegisterSQLSchemaException():
    cdef _picard_types.RegisterSQLSchemaException defaults = _picard_types.RegisterSQLSchemaException.create(
        constant_shared_ptr[_picard_types.cRegisterSQLSchemaException](
            default_inst[_picard_types.cRegisterSQLSchemaException]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="RegisterSQLSchemaException",
        kind=__StructType.EXCEPTION,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="dbId",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=2,
            name="message",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__RegisterTokenizerException():
    cdef _picard_types.RegisterTokenizerException defaults = _picard_types.RegisterTokenizerException.create(
        constant_shared_ptr[_picard_types.cRegisterTokenizerException](
            default_inst[_picard_types.cRegisterTokenizerException]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="RegisterTokenizerException",
        kind=__StructType.EXCEPTION,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="message",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__TokenizerNotRegisteredException():
    cdef _picard_types.TokenizerNotRegisteredException defaults = _picard_types.TokenizerNotRegisteredException.create(
        constant_shared_ptr[_picard_types.cTokenizerNotRegisteredException](
            default_inst[_picard_types.cTokenizerNotRegisteredException]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="TokenizerNotRegisteredException",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="message",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__TokenizerPrefixException():
    cdef _picard_types.TokenizerPrefixException defaults = _picard_types.TokenizerPrefixException.create(
        constant_shared_ptr[_picard_types.cTokenizerPrefixException](
            default_inst[_picard_types.cTokenizerPrefixException]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="TokenizerPrefixException",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="message",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__ModeException():
    cdef _picard_types.ModeException defaults = _picard_types.ModeException.create(
        constant_shared_ptr[_picard_types.cModeException](
            default_inst[_picard_types.cModeException]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="ModeException",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="message",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__FeedFatalException():
    cdef __StructSpec spec = __StructSpec.create(
        name="FeedFatalException",
        kind=__StructType.UNION,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="tokenizerNotRegisteredException",
            type=_picard_types.TokenizerNotRegisteredException,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=2,
            name="tokenizerPrefixException",
            type=_picard_types.TokenizerPrefixException,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=3,
            name="modeException",
            type=_picard_types.ModeException,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__FeedException():
    cdef _picard_types.FeedException defaults = _picard_types.FeedException.create(
        constant_shared_ptr[_picard_types.cFeedException](
            default_inst[_picard_types.cFeedException]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="FeedException",
        kind=__StructType.EXCEPTION,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="feedFatalException",
            type=_picard_types.FeedFatalException,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__FeedParseFailure():
    cdef _picard_types.FeedParseFailure defaults = _picard_types.FeedParseFailure.create(
        constant_shared_ptr[_picard_types.cFeedParseFailure](
            default_inst[_picard_types.cFeedParseFailure]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="FeedParseFailure",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="input",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=2,
            name="contexts",
            type=_picard_types.List__string,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=3,
            name="description",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__FeedTimeoutFailure():
    cdef _picard_types.FeedTimeoutFailure defaults = _picard_types.FeedTimeoutFailure.create(
        constant_shared_ptr[_picard_types.cFeedTimeoutFailure](
            default_inst[_picard_types.cFeedTimeoutFailure]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="FeedTimeoutFailure",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="message",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__FeedPartialSuccess():
    cdef _picard_types.FeedPartialSuccess defaults = _picard_types.FeedPartialSuccess.create(
        constant_shared_ptr[_picard_types.cFeedPartialSuccess](
            default_inst[_picard_types.cFeedPartialSuccess]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="FeedPartialSuccess",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    return spec
cdef __StructSpec get_reflection__FeedCompleteSuccess():
    cdef _picard_types.FeedCompleteSuccess defaults = _picard_types.FeedCompleteSuccess.create(
        constant_shared_ptr[_picard_types.cFeedCompleteSuccess](
            default_inst[_picard_types.cFeedCompleteSuccess]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="FeedCompleteSuccess",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="leftover",
            type=str,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__FeedResult():
    cdef __StructSpec spec = __StructSpec.create(
        name="FeedResult",
        kind=__StructType.UNION,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="feedParseFailure",
            type=_picard_types.FeedParseFailure,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=2,
            name="feedTimeoutFailure",
            type=_picard_types.FeedTimeoutFailure,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=3,
            name="feedPartialSuccess",
            type=_picard_types.FeedPartialSuccess,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=4,
            name="feedCompleteSuccess",
            type=_picard_types.FeedCompleteSuccess,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __StructSpec get_reflection__BatchFeedResult():
    cdef _picard_types.BatchFeedResult defaults = _picard_types.BatchFeedResult.create(
        constant_shared_ptr[_picard_types.cBatchFeedResult](
            default_inst[_picard_types.cBatchFeedResult]()
        )
    )
    cdef __StructSpec spec = __StructSpec.create(
        name="BatchFeedResult",
        kind=__StructType.STRUCT,
        annotations={
        },
    )
    spec.add_field(
        __FieldSpec.create(
            id=1,
            name="batchId",
            type=int,
            kind=__NumberType.I64,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=2,
            name="topToken",
            type=int,
            kind=__NumberType.I64,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    spec.add_field(
        __FieldSpec.create(
            id=3,
            name="feedResult",
            type=_picard_types.FeedResult,
            kind=__NumberType.NOT_A_NUMBER,
            qualifier=__Qualifier.UNQUALIFIED,
            default=None,
            annotations={
            },
        ),
    )
    return spec
cdef __ListSpec get_reflection__List__i64():
    return __ListSpec.create(
        value=int,
        kind=__NumberType.I64,
    )

cdef __ListSpec get_reflection__List__List__i64():
    return __ListSpec.create(
        value=_picard_types.List__i64,
        kind=__NumberType.NOT_A_NUMBER,
    )

cdef __ListSpec get_reflection__List__BatchFeedResult():
    return __ListSpec.create(
        value=_picard_types.BatchFeedResult,
        kind=__NumberType.NOT_A_NUMBER,
    )

cdef __MapSpec get_reflection__Map__string_string():
    return __MapSpec.create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=str,
        value_kind=__NumberType.NOT_A_NUMBER,
    )

cdef __MapSpec get_reflection__Map__string_ColumnType():
    return __MapSpec.create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=_picard_types.ColumnType,
        value_kind=__NumberType.NOT_A_NUMBER,
    )

cdef __ListSpec get_reflection__List__string():
    return __ListSpec.create(
        value=str,
        kind=__NumberType.NOT_A_NUMBER,
    )

cdef __MapSpec get_reflection__Map__string_List__string():
    return __MapSpec.create(
        key=str,
        key_kind=__NumberType.NOT_A_NUMBER,
        value=_picard_types.List__string,
        value_kind=__NumberType.NOT_A_NUMBER,
    )

