/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#pragma once
#include <gen-cpp2/Picard.h>
#include <folly/python/futures.h>
#include <Python.h>

#include <memory>

namespace cpp2 {

class PicardWrapper : virtual public PicardSvIf {
  protected:
    PyObject *if_object;
    folly::Executor *executor;
  public:
    explicit PicardWrapper(PyObject *if_object, folly::Executor *exc);
    void async_tm_registerSQLSchema(std::unique_ptr<apache::thrift::HandlerCallback<void>> callback
        , std::unique_ptr<std::string> dbId
        , std::unique_ptr<::cpp2::SQLSchema> sqlSchema
    ) override;
    void async_tm_registerTokenizer(std::unique_ptr<apache::thrift::HandlerCallback<void>> callback
        , std::unique_ptr<std::string> jsonConfig
    ) override;
    void async_tm_feed(std::unique_ptr<apache::thrift::HandlerCallback<std::unique_ptr<::cpp2::FeedResult>>> callback
        , std::unique_ptr<std::vector<int64_t>> inputIds
        , int64_t token
        , ::cpp2::Mode mode
    ) override;
    void async_tm_batchFeed(std::unique_ptr<apache::thrift::HandlerCallback<std::unique_ptr<std::vector<::cpp2::BatchFeedResult>>>> callback
        , std::unique_ptr<std::vector<std::vector<int64_t>>> inputIds
        , std::unique_ptr<std::vector<std::vector<int64_t>>> topTokens
        , ::cpp2::Mode mode
    ) override;
};

std::shared_ptr<apache::thrift::ServerInterface> PicardInterface(PyObject *if_object, folly::Executor *exc);
} // namespace cpp2
